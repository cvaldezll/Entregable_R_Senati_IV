print("Hola mundo")
print(saludo)
print(saludo)
saludo <- "Hola mundo en R"
print(saludo)
saludo <- "Hola mundo en R"
print(saludo)
a <- 10
b <- 4
# 1. Suma
print(a+b)
# 2. Potencia
print(a^2)
# 3. División con decimales
print(a/b)
clear
clear()
a+b # 14
print(a+b)
x <- 7
y <- 3
print(x>y)
print(x==y)
print((x>5) & (y<5))
edad <- 20
es_mayor_edad <- (edad >= 18)
print(es_mayor_edad)
nombre <- "Christian"
apellido <- "Valdez"
print(paste("Hola, ", nombre, apellido))
# Concatenar cadenas con 'paste'
print(paste("Hola,", nombre, apellido))
print(paste("Hola,", nombre, apellido))
# Concatenar cadenas con 'paste'
print(paste("Hola,", nombre, apellido))
mensaje <- "programar en R es divertido"
print(toupper(mensaje))
print(nchar(mensaje))
hoy <- Sys.Date()
print(hoy)
manana <- hoy + 1
print(manana)
cumple <- as.Date("2025-12-25")
print(cumple - hoy)
nombre <- "Christian"
edad <- 45
print("Hola, mi nombre es %s y tengo %d años",nombre,edad)
nombre <- "Christian"
edad <- 45
print("Hola, mi nombre es %nombre y tengo %edad años",nombre,edad)
nombre <- "Christian"
edad <- 45
print("Hola, mi nombre es %s y tengo %d años",nombre,edad)
nombre <- "Christian"
edad <- 45
print(sprintf("Hola, mi nombre es %s y tengo %d años",nombre,edad)
print(sprintf("Hola, mi nombre es %s y tengo %d años",nombre,edad))
sprintf("Hola, mi nombre es %s y tengo %d años",nombre,edad)
nombre <- "Christian"
edad <- 45
print(sprintf("Hola, mi nombre es %s y tengo %d años",nombre,edad))
nombre <- "Christian"
edad <- 45
sprintf("Hola, mi nombre es %s y tengo %d años",nombre,edad)
pi_val <- pi
sprintf("El valor de PI con 2 decimales es: %.2f",pi_val)
pi_val <- pi
sprintf("El valor de PI con 2 decimales es: %.2f",pi_val)
curso <- "R"
duracion <- "8"
sprintf("El curso de %s tiene una duración de %d semanas",curso,duracion)
curso <- "R"
duracion <- "8"
sprintf("El curso de %s tiene una duración de %d semanas",curso,duracion)
curso <- "R"
duracion <- "8"
sprintf("El curso de %s tiene una duración de %d semanas",curso,duracion)
curso <- "R"
duracion <- "8"
sprintf("El curso de %s tiene una duración de semanas",curso,duracion)
sprintf("El curso de %s tiene una duración de semanas",curso)
sprintf("El curso de %s tiene una duración de %d semanas",curso,duracion)
curso <- "R"
duracion <- 8
sprintf("El curso de %s tiene una duración de %d semanas",curso,duracion)
curso <- "R"
duracion <- 8
sprintf("El curso de %s tiene una duración de %d semanas",curso,duracion)
curso <- "R"
duracion <- 8
sprintf("El curso de %s tiene una duración de %d semanas",curso,duracion)
entero <- 10L # la 'L' indica que es 'entero'
print(entero)
print(class(entero))
decimal <- 10.75
print(decimal)
print(class(decimal))
complejo <- 3 + 2i
print(complejo)
print(Mod(complejo))    # módulo del número complejo
print(Arg(complejo))    # argumento: ángulo
print(class(complejo))  # resultado: complex
a <- 3 + 2i
b <- 2 + 5i
print(a+b)
print(a-b)
print(5/0)
print(-5/0)
print(0/0)
sprintf("En notación científica: %e", 123456)
nombre <- "Christian"
edad <- 45
fecha <- Sys.Date()
numero1 <- 15
numero2 <- 4
suma <- numero1 + numero2
print("Reporte del Alumno")
print("------------------")
sprintf("Nombre: %s", nombre)
sprintf("Edad: %d", edad)
sprintf("%d + %d = %d", numero1, numero2, suma)
nombre <- "Christian"
edad <- 45
fecha <- Sys.Date()
numero1 <- 15
numero2 <- 4
suma <- numero1 + numero2
division <- numero1 / numero2
potencia <- numero1 ^ 2
print("Reporte del Alumno")
print("------------------")
sprintf("Nombre: %s", nombre)
sprintf("Edad: %d", edad)
sprintf("%d + %d = %d", numero1, numero2, suma)
sprintf("%d / %d = %d", numero1, numero2, division)
sprintf("%d / %d = %f", numero1, numero2, division)
nombre <- "Christian"
edad <- 45
fecha <- Sys.Date()
numero1 <- 15
numero2 <- 4
suma <- numero1 + numero2
division <- numero1 / numero2
potencia <- numero1 ^ 2
print("Reporte del Alumno")
print("------------------")
sprintf("Nombre: %s", nombre)
sprintf("Edad: %d", edad)
sprintf("%d + %d = %d", numero1, numero2, suma)
sprintf("%d / %d = %f", numero1, numero2, division)
sprintf("%d ^ 2 = %d", numero1, potencia)
mayor_de_edad <- (edad>18)
sprintf("¿Mayor de edad?", mayor_de_edad)
sprintf("¿Mayor de edad? $s", mayor_de_edad)
sprintf("¿Mayor de edad? %s", mayor_de_edad)
es_mayor <- (numero1 > numero2)
sprintf("¿Es 15 mayor que 4? %s", es_mayor)
nombre <- "Christian"
edad <- 45
fecha <- Sys.Date()
numero1 <- 15
numero2 <- 4
suma <- numero1 + numero2
division <- numero1 / numero2
potencia <- numero1 ^ 2
mayor_de_edad <- (edad>18)
es_mayor <- (numero1 > numero2)
print("Reporte del Alumno")
print("------------------")
sprintf("Nombre: %s", nombre)
sprintf("Edad: %d", edad)
sprintf("%d + %d = %d", numero1, numero2, suma)
sprintf("%d / %d = %f", numero1, numero2, division)
sprintf("%d ^ 2 = %d", numero1, potencia)
sprintf("¿Mayor de edad? %s", mayor_de_edad)
sprintf("¿Es 15 mayor que 4? %s", es_mayor)
nombre <- "Christian"
edad <- 45
fecha <- Sys.Date()
numero1 <- 15
numero2 <- 4
suma <- numero1 + numero2
division <- numero1 / numero2
potencia <- numero1 ^ 2
mayor_de_edad <- (edad>18)
es_mayor <- (numero1 > numero2)
print("Reporte del Alumno")
print("------------------")
sprintf("Nombre: %s", nombre)
sprintf("Edad: %d", edad)
sprintf("%d + %d = %d", numero1, numero2, suma)
sprintf("%d / %d = %f", numero1, numero2, division)
sprintf("%d ^ 2 = %d", numero1, potencia)
sprintf("¿Mayor de edad? %s", mayor_de_edad)
sprintf("¿Es 15 mayor que 4? %s", es_mayor)
saludo <- function() {
print("Hola, bienvenido al curso de R")
}
saludo()
suma <- function(a, b) {
return(a + b)
}
print(suma(5, 3))
suma <- function(a, b) {
return(a + b)
}
print(suma(5, 3))
suma <- function(a, b) {
return(a + b)
}
print(suma(5, 3))
notas <- c(15, 18, 12, 20, 17)
promedio <- mean(notas)
print(promedio)
print(max(notas))
print(min(notas))
aprobados <- notas >= 11
print(aprobados)
alumnos <- c("Ana", "Luis", "María", "Carlos")
print(alumnos[2])
print(length(alumnos))
ventas_sucursal1 <- c(120, 150, 100)
ventas_sucursal2 <- c(80, 130, 90)
ventas_totales <- ventas_sucursal1 - ventas_sucursal2
print(ventas_totales)
numeros <- 1:10
print(numeros)
decimales <- seq(0, 1, by=0.2)
print(decimales)
graphics::plot(numeros)
graphics::plot(decimales)
ciudades_visitar <- c("Nueva York", "Los Angeles", "Chicago", "San Francisco", "Miami")
dias_por_ciudad <- c(5, 4, 3, 6, 2)
costo_diario <- c(200, 180, 150, 220, 170)
temperaturas_maximas <- c(29, 28, 27, 22, 31)
temperaturas_minimas <- c(21, 18, 19, 15, 25)
temperaturas <- matric(c(temperaturas_maximas,
temperaturas_minimas),
nrow=5,
ncol=2,
dimnames=list(ciudades_visitar, c("Máxima","Mínima")))
ciudades_visitar <- c("Nueva York", "Los Angeles", "Chicago", "San Francisco", "Miami")
dias_por_ciudad <- c(5, 4, 3, 6, 2)
costo_diario <- c(200, 180, 150, 220, 170)
temperaturas_maximas <- c(29, 28, 27, 22, 31)
temperaturas_minimas <- c(21, 18, 19, 15, 25)
temperaturas <- matrix(c(temperaturas_maximas,
temperaturas_minimas),
nrow=5,
ncol=2,
dimnames=list(ciudades_visitar, c("Máxima","Mínima")))
print(temperaturas)
ciudades_visitar <- c("Nueva York", "Los Angeles", "Chicago", "San Francisco", "Miami")
dias_por_ciudad <- c(5, 4, 3, 6, 2)
costo_diario <- c(200, 180, 150, 220, 170)
temperaturas_maximas <- c(29, 28, 27, 22, 31)
temperaturas_minimas <- c(21, 18, 19, 15, 25)
temperaturas <- matrix(c(temperaturas_maximas,
temperaturas_minimas),
nrow=5,
ncol=2,
dimnames=list(ciudades_visitar, c("Máxima","Mínima"))
)
print(temperaturas)
ciudades_visitar <- c("Nueva York", "Los Angeles", "Chicago", "San Francisco", "Miami")
dias_por_ciudad <- c(5, 4, 3, 6, 2)
costo_diario <- c(200, 180, 150, 220, 170)
temperaturas_maximas <- c(29, 28, 27, 22, 31)
temperaturas_minimas <- c(21, 18, 19, 15, 25)
temperaturas <- matrix(c(temperaturas_maximas,
temperaturas_minimas),
nrow=5,
ncol=2,
dimnames=list(ciudades_visitar, c("Máxima","Mínima"))
)
print(temperaturas)
clima <- array(dim = c(5, 12, 2),
dimnames = list(ciudades_visitar, month.name, c("Temperatura","Precipitación"))
)
clima[,, "Temperatura"] <- sample(10:35, 60, replace=TRUE) # temperaturas entre 10 y 35 grados
print(temperaturas[,,temperaturas])
print(temperaturas[,,temperatura])
print(temperaturas[,,"Temperatura"])
print(clima[,,"Temperatura"])
clima[,, "Precipitación"] <- sample(0:100, 60, replace=TRUE) # precipitación entre 0 y 100 mm
print(clima[,,"Precipitación"])
df_ciudades <- data.frame(ciudad = c("Nueva York", "Los Angeles", "Chicago", "Houston"),
estado = c("Nueva York", "California", "Illinois", "Texas"),
costo_vida = c(3.5, 2.8, 2.5, 2.0),
tasa_criminalidad = c(400, 350, 500, 450),
clima = c("Templado", "Mediterráneo", "Continental", "Subtropical")
)
print(df_ciudades)
df_estados <- data.frame(estado = c("California", "Texas", "Florida", "Nueva York"),
poblacion = c(39.2e6, 29.0e6, 21.4e6, 19.4e6),
pib = c(3.2e12, 1.8e12, 1.1e12, 1.7e12),
sistema_educativo = c("Bueno","Regular","Bueno","Excelente")
)
print(df_estados)
print(df_ciudades$estado)
print(df_ciudades[estado])
print(df_ciudades["estado"])
print(df_ciudades[3,])
print(df_ciudades[2,3])
head(df_ciudades)
tail(df_ciudades)
str(df_ciudades)
str(df_ciudades)
summary(df_ciudades$costo_vida)
table(df_ciudades$clima)
hist(df_estados$poblacion)
view(df_ciudades)
View(df_ciudades)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("dslabs")
install.packages("dslabs")
library(dslabs)
data(murders)
murders %>% select(state, populations, total)
library(dslabs)
data(murders)
# Pipeline
murders %>% select(state, populations, total)
print(murders)
murders %>% select(state, population, total)
murders
murders %>% select(state, population, total)
murders %>% select(state, population, total)
tidyverse::murders %>% select(state, population, total)
dslabs::murders %>% select(state, population, total)
print(murders)
install.packages("tidyverse")
install.packages("dslabs")
murders %>% select(state, population, total)
library(dplyr)
murders %>% select(state, population, total)
murders %>% select(state, population, total)
library(dslabs)
library(dplyr)
data("murders")
head("murders")
library(dslabs)
library(dplyr)
data("murders")
head(murders)
library(dslabs)
library(dplyr)
data("murders")
head(murders)
murders %>% filter(population > 1e6)
murders %>% filter(population > 1e6) %>%
arrange(desc(population))
murders %>% filter(population > 1e6) %>%
arrange(desc(population))
murders %>% filter(population > 1e6) %>%
arrange(desc(population)) %>%
select(state, population)
murders %>%
mutate(rate = total/population*100000) %>%
select(state, region, rate) %>%
arrange(desc(rate))
murders %>%
mutate(rate = total/population*100000) %>%
group_by(region)
murders %>%
mutate(rate = total/population*100000) %>%
group_by(region) %>%
summarise(avg_rate = mean(rate))
head(murders %>% select(state, population, total))
murders %>%
select(state, population, total) %>%
head()
murders %>%
mutate(rate = total/population*100000) %>%
filter(ratio<1 & region=="West")
murders %>%
mutate(ratio = total/population*100000) %>%
filter(ratio<1 & region=="West")
murders %>%
summarise(media_poblacion = mean(population))
murders
murders %>%
group_by(state) %>%
summarise(avg_rate = mean(total)) %>%
arrange(desc(avg_rate)
murders
head(murders)
murders %>%
mutate(rate = total/population*1e6)
group_by(state) %>%
summarise(avg_rate = mean(rate)) %>%
arrange(desc(avg_rate)
head(murders)
head(murders)
murders %>%
mutate(rate = total/population*1e6)
group_by(state) %>%
summarise(avg_rate = mean(rate)) %>%
arrange(desc(avg_rate))
murders %>%
mutate(rate = total/population*1e6)
group_by(state) %>%
summarise(avg_rate = mean(rate))
murders %>%
mutate(rate = total/population*1e6) %>%
group_by(state) %>%
summarise(avg_rate = mean(rate)) %>%
arrange(desc(avg_rate))
murders %>%
mutate(rate = total/population*1e6) %>%
group_by(state) %>%
summarise(avg_rate = mean(rate)) %>%
arrange(desc(avg_rate))
eje_x <- murders$population
eje_y <- murders$total
plot(eje_x, eje_y)
head(murders)
hist(murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio))
murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio)
hist(murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio))
murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio)
hist(murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio))
murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio)
murders_ratio <- murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio)
hist(murders_ratio)
murders_ratio <- murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio)
murders_ratio <- murders %>%
mutate(ratio = total/population*1e6) %>%
select(ratio)
hist(murders_ratio%ratio)
murders_ratio <- murders %>%
mutate(ratio = total/population*1e6)
hist(murders_ratio)
hist(murders_ratio$ratio)
head(murders_ratio)
data("heights")
head(heights)
heights %>%
mutate(estatura = heights/39.37)
head(heights)
heights %>%
mutate(estatura = height/39.37)
head(heights)
heights %>%
mutate(estatura = height/39.37) %>%
head()
estaturas <- heights %>%
mutate(estatura = height/39.37)
promedio <- mean(estaturas$estatura)
desv_est <- sd(estaturas$estatura)
head(promedio)
head(desv_est)
promedio
desv_est
estaturas_hom <- estaturas %>%
filter(sex=="Male") %>%
summarize(promedio = mean(estatura), desv_est = sd(estatura))
class(estaturas_hom)
library(tibble)
tb <- tibble(
id = 1:3,
nombre = c("Luis", "Ana", "Carlos"),
edad = c(25, 30, 28)
)
tb
big_df <- data.frame(x = 1:1000, y = rnorm(1000))
head(big_df)
big_tb <- as_tibble(big_df)
head(big_tb)
big_tb
big_df$apellido
big_tb$apellido
df <- data.frame(x = 1:3, letters[1:3])
df
tb <- as_tibble(df)
tb
class(tb)
data("iris")
tb_iris <- as_tibble(iris)
tb_iris
install.packages("janitor")
library(janitor)
setwd("D:/Dropbox/Estudios SENATI/4to Semestre/Lenguaje de Programación para Ciencia de Datos/Entregable/")
library(shiny); runApp('Entregable.R')
runApp('Entregable.R')
